name: os
on:
    push:
        tags:
            - "*"
        branches: [main]
    pull_request:
        branches: [main]
        types: [opened, synchronize]
jobs:
    test:
        name: ${{ matrix.os }} (${{ matrix.target }})
        runs-on: ${{ matrix.os }}
        defaults:
            run:
                shell: bash
        strategy:
            matrix:
                os: [ubuntu-latest]
                include:
                    - os: ubuntu-latest
                      target: x86_64-unknown-none
        steps:
            - name: Checkout
              uses: actions/checkout@v3
            - name: Cache Rust
              uses: actions/cache@v3
              with:
                  path: |
                      ~/.cargo/bin/
                      ~/.cargo/registry/index/
                      ~/.cargo/registry/cache/
                      target/
                  key: ${{ matrix.target }}-cargo- }}
                  restore-keys: ${{ matrix.target }}-cargo- }}
            - name: Install Rust Toolchain
              uses: dtolnay/rust-toolchain@nightly
              with:
                  target: ${{ matrix.target }}
                  components: rustfmt, clippy, rust-src, llvm-tools-preview
            - name: Format
              run: cargo fmt --all -- --check
            - name: Lint
              run: cargo clippy --release -- -D warnings
            - name: Build
              run: CARGO_MANIFEST_DIR=$(pwd) cargo bootimage --release --locked
            - name: Package
              id: package
              run: |
                  PROJECT_NAME="$(sed -n 's/^name = "\(.*\)"/\1/p' Cargo.toml)"
                  PROJECT_VERSION="$(sed -n 's/^version = "\(.*\)"/\1/p' Cargo.toml | head -n1)"
                  PKG_SUFFIX=".tar.gz"
                  PKG_NAME="${PROJECT_NAME}-${PROJECT_VERSION}-${{ matrix.target }}${PKG_SUFFIX}"
                  tar -C target/${{matrix.target}}/release -czf "${PKG_NAME}" "bootimage-${PROJECT_NAME}.bin"
                  echo "PKG_NAME=${PKG_NAME}" >> $GITHUB_OUTPUT
                  echo "PKG_PATH=${PKG_NAME}" >> $GITHUB_OUTPUT
            - name: Upload Artifacts
              uses: actions/upload-artifact@v3
              with:
                  name: ${{ steps.package.outputs.PKG_NAME }}
                  path: ${{ steps.package.outputs.PKG_PATH }}
            - name: Release
              uses: softprops/action-gh-release@v1
              if: startsWith(github.ref, 'refs/tags/')
              with:
                  files: ${{ steps.package.outputs.PKG_PATH }}
              env:
                  GITHUB_TOKEN: ${{ secrets.TOKEN }}
